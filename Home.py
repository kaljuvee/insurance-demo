import streamlit as st
from utils import load_api_keys
from locale_util import init_language_selector, tr

# Load API keys from .env file
api_keys_loaded = load_api_keys()

st.set_page_config(
    page_title="Insurance Claims Analyzer",
    page_icon="üìã",
    layout="wide",
    initial_sidebar_state="expanded"
)

st.title(tr("Insurance Claims Analyzer", "Kindlustusn√µuete anal√ºsaator"))

st.markdown(tr(
    """
## Welcome to the Insurance Claims Analyzer

This application helps insurance professionals and policyholders analyze and compare insurance claims against policy contracts with advanced fraud detection and accuracy assessment capabilities.

### Features:

- **Claims Check**: Upload invoice/claim documents and compare them against policy contracts
  - **NEW**: Support for image invoices (JPG, PNG, JPEG)
  - **NEW**: Fraud Detection step to identify doctored/fraudulent documents
  - **NEW**: Document selection from data folder in sidebar
- **Image Detection**: Upload images of damaged property to identify features and potential damage
  - **NEW**: Fraud Detection to identify manipulated or staged images
  - **NEW**: False Positive/Negative Detection with scoring system
  - **NEW**: Accuracy assessment for damage claims
- **Automated Extraction**: Uses AI to extract relevant information from PDF documents and images
- **Side-by-Side Comparison**: Easily identify discrepancies between claims and policy coverage
- **Highlighted Differences**: Quickly spot potential issues or areas of concern
- **Fraud Prevention**: Advanced AI-powered fraud detection for both documents and images

### How to Use:

1. Navigate to the desired page using the sidebar:
   - **Claims Check**: For document comparison, fraud detection, and analysis
   - **Image Detection**: For analyzing images of property damage with fraud detection
2. Upload your documents or images, or select from available documents in the data folder
3. Choose the appropriate analysis type (Comprehensive, Damage Assessment, Fraud Detection, etc.)
4. Review the detailed AI-powered analysis with risk scores and recommendations

### New Fraud Detection Capabilities:

- **Document Fraud Detection**: Analyzes PDFs and images for signs of manipulation, inconsistencies, and forgery
- **Image Fraud Detection**: Detects digital manipulation, staged damage, and suspicious patterns
- **False Positive/Negative Detection**: Identifies when clients present undamaged items as damaged or when damage might be overlooked
- **Risk Scoring**: Provides numerical risk scores and confidence levels for all assessments
- **Comprehensive Reporting**: Detailed reports with specific indicators and recommendations

### Benefits:

- Save time by automating document and image analysis
- Reduce errors in claims processing
- **NEW**: Prevent fraud with advanced detection capabilities
- **NEW**: Improve accuracy with false positive/negative detection
- Ensure compliance with policy terms
- Improve customer satisfaction with faster claims resolution
- Document damage effectively with AI-powered image analysis
- **NEW**: Reduce fraudulent claims and improve profitability

---
*This tool uses OpenAI and Anthropic language models to extract and analyze content with advanced fraud detection capabilities.*
""",
    """
## Tere tulemast kindlustusn√µuete anal√ºsaatorisse

See rakendus aitab kindlustusspetsialistidel ja kindlustusv√µtjatel anal√º√ºsida ning v√µrrelda kindlustusn√µudeid poliisilepingutega. Rakendusel on sisseehitatud pettuse tuvastamine ja t√§psuse hindamine.

### Funktsioonid:

- **N√µuete kontroll**: Laadi √ºles arved/n√µuded ja v√µrdle neid poliisilepingutega
  - **UUS**: Pildi-arvete tugi (JPG, PNG, JPEG)
  - **UUS**: Pettuse tuvastus samm, mis tuvastab v√µltsitud/manipuleeritud dokumendid
  - **UUS**: K√ºlgribal dokumentide valik `data/` kaustast
- **Pildi tuvastus**: Laadi √ºles kahjustustega vara pildid ja tuvasta tunnused
  - **UUS**: Pettuse tuvastus manipuleeritud v√µi lavastatud piltide avastamiseks
  - **UUS**: Vale-positiivsete/negatiivsete hindamine skooriga
  - **UUS**: Kahju t√µsiduse hindamine
- **Automaatne v√§ljav√µte**: AI tuvastab PDFidest ja piltidest asjakohase info
- **K√µrvuti v√µrdlus**: Tuvasta h√µlpsalt vastuolud n√µuete ja poliiside vahel
- **Esilet√µstetud erinevused**: Kiire √ºlevaade v√µimalikest probleemidest
- **Pettuste ennetamine**: Arvutip√µhine pettuse tuvastus dokumentidele ja piltidele

### Kuidas kasutada:

1. Liigu k√ºlgriba abil sobivale lehele:
   - **N√µuete kontroll**: Dokumentide v√µrdlus, pettuse tuvastus
   - **Pildi tuvastus**: Kahjustuste anal√º√ºs piltidelt koos pettuse tuvastusega
2. Laadi √ºles dokumendid v√µi pildid v√µi vali need `data/` kaustast
3. Vali sobiv anal√º√ºsi t√º√ºp (nt terviklik, kahju hindamine, pettuse tuvastus)
4. Vaata detailset AI-anal√º√ºsi koos riskiskooridega

### Uued pettuse tuvastuse v√µimalused:

- **Dokumentide pettuse tuvastus**: Tuvastab manipuleerimise, vastuolud ja v√µltsingu tunnused
- **Pildi pettuse tuvastus**: Tuvastab digitaalse manipuleerimise, lavastatud kahju ja ebaj√§rjekindlused
- **Vale-positiivsed/negatiivsed**: Tuvastab ekslikud v√§ited v√µi t√§helepanuta j√§√§nud kahjud
- **Riskiskoorid**: Numbrilised riskid ja kindlustunne
- **Raportid**: Detailne √ºlevaade koos soovitustega

### Eelised:

- S√§√§stab aega automatiseeritud anal√º√ºsiga
- V√§hendab vigu menetluses
- **UUS**: Ennetab pettusi
- **UUS**: Parandab t√§psust vale-positiivsete/negatiivsete tuvastusel
- Tagab vastavuse poliisi tingimustele
- Parandab kliendirahulolu
- Dokumenteerib kahju t√µhusalt
- **UUS**: V√§hendab pettusn√µudeid

---
*See t√∂√∂riist kasutab OpenAI ja Anthropic mudeleid pettuse tuvastuse ja anal√º√ºsi jaoks.*
"""
))

# Display API key status in the sidebar
st.sidebar.title(tr("Navigation", "Navigatsioon"))
init_language_selector()
st.sidebar.info(tr("Select a page from the dropdown above", "Vali leht √ºlalolevast rippmen√º√ºst"))

# Show API key status
st.sidebar.markdown("---")
st.sidebar.header(tr("API Key Status", "API v√µtmete olek"))

if api_keys_loaded['openai_api_key']:
    st.sidebar.success(tr("‚úÖ OpenAI API key loaded", "‚úÖ OpenAI API v√µti leitud"))
else:
    st.sidebar.warning(tr("‚ö†Ô∏è OpenAI API key not found in .env file", "‚ö†Ô∏è OpenAI API v√µtit ei leitud .env failist"))

if api_keys_loaded['anthropic_api_key']:
    st.sidebar.success(tr("‚úÖ Anthropic API key loaded", "‚úÖ Anthropic API v√µti leitud"))
else:
    st.sidebar.info(tr("‚ÑπÔ∏è Anthropic API key not found (optional)", "‚ÑπÔ∏è Anthropic API v√µti puudub (valikuline)"))

st.sidebar.markdown(tr(
    """
### Setup Instructions

1. Create a `.env` file in the root directory
2. Add your API keys in the following format:
   ```
   OPENAI_API_KEY=your_openai_api_key_here
   ANTHROPIC_API_KEY=your_anthropic_api_key_here
   ```
3. Restart the application if needed

You can also enter API keys directly in each tool page.
""",
    """
### Seadistamine

1. Loo projekti juurkausta `.env` fail
2. Lisa API v√µtmed j√§rgmises vormingus:
   ```
   OPENAI_API_KEY=siia_sinu_openai_v√µti
   ANTHROPIC_API_KEY=siia_sinu_anthropic_v√µti
   ```
3. Taask√§ivita rakendus vajadusel

V√µid sisestada v√µtmed ka otse iga lehe k√ºlgribal.
"""
))